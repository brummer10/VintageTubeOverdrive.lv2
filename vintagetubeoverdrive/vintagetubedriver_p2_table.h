
// vintagetubedriver_p2_table generated by DK/circ_table_gen.py -- do not modify manually

 // variables used
 // --sig_max  1.400000
 // --table_div  3.024319
 // --table_op  1.000000

struct tablevintagetubedriver_p2 { // 1-dimensional function table
    float low;
    float high;
    float istep;
    int size;
    float data[];
};

template <int tab_size>
struct tablevintagetubedriver_p2_imp {
    float low;
    float high;
    float istep;
    int size;
    float data[tab_size];
    operator tablevintagetubedriver_p2&() const { return *(tablevintagetubedriver_p2*)this; }
};

 static tablevintagetubedriver_p2_imp<200> vintagetubedriver_p2_table __rt_data = {
	0,0.417428,142.143,200, {
	0.000000000000,0.002047454025,0.004151543454,0.006310635192,0.008523136097,
	0.010787488156,0.013102164465,0.015465665878,0.017876518214,0.020333269953,
	0.022834490320,0.025378767715,0.027964708438,0.030590935651,0.033256088559,
	0.035958821768,0.038697804796,0.041471721720,0.044279270931,0.047119164988,
	0.049990130547,0.052890908369,0.055820253372,0.058776934740,0.061759736064,
	0.064767455511,0.067798906025,0.070852915531,0.073928327164,0.077023999487,
	0.080138806726,0.083271638990,0.086421402488,0.089587019738,0.092767429760,
	0.095961588252,0.099168467755,0.102387057788,0.105616364977,0.108855413143,
	0.112103243385,0.115358914125,0.118621501142,0.121890097565,0.125163813860,
	0.128441777776,0.131723134280,0.135007045458,0.138292690402,0.141579265069,
	0.144865982119,0.148152070738,0.151436776435,0.154719360830,0.157999101413,
	0.161275291302,0.164547238981,0.167814268012,0.171075716768,0.174330938130,
	0.177579299182,0.180820180907,0.184052977870,0.187277097904,0.190491961786,
	0.193697002926,0.196891667039,0.200075411835,0.203247706703,0.206408032400,
	0.209555880751,0.212690754349,0.215812166265,0.218919639766,0.222012708044,
	0.225090913949,0.228153809738,0.231200956832,0.234231925582,0.237246295051,
	0.240243652807,0.243223594720,0.246185724784,0.249129654940,0.252055004920,
	0.254961402091,0.257848481326,0.260715884874,0.263563262249,0.266390270125,
	0.269196572247,0.271981839347,0.274745749076,0.277487985936,0.280208241235,
	0.282906213037,0.285581606127,0.288234131984,0.290863508757,0.293469461249,
	0.296051720909,0.298610025828,0.301144120733,0.303653757000,0.306138692654,
	0.308598692384,0.311033527551,0.313442976211,0.315826823121,0.318184859765,
	0.320516884368,0.322822701912,0.325102124159,0.327354969663,0.329581063787,
	0.331780238719,0.333952333486,0.336097193960,0.338214672873,0.340304629818,
	0.342366931260,0.344401450527,0.346408067820,0.348386670198,0.350337151578,
	0.352259412717,0.354153361205,0.356018911440,0.357855984613,0.359664508679,
	0.361444418332,0.363195654971,0.364918166667,0.366611908127,0.368276840646,
	0.369912932069,0.371520156740,0.373098495451,0.374647935389,0.376168470077,
	0.377660099315,0.379122829117,0.380556671647,0.381961645148,0.383337773871,
	0.384685088006,0.386003623603,0.387293422494,0.388554532216,0.389787005925,
	0.390990902318,0.392166285542,0.393313225110,0.394431795812,0.395522077623,
	0.396584155615,0.397618119860,0.398624065342,0.399602091854,0.400552303909,
	0.401474810643,0.402369725713,0.403237167203,0.404077257523,0.404890123312,
	0.405675895340,0.406434708401,0.407166701224,0.407872016362,0.408550800102,
	0.409203202356,0.409829376568,0.410429479611,0.411003671687,0.411552116231,
	0.412074979806,0.412572432014,0.413044645388,0.413491795302,0.413914059871,
	0.414311619856,0.414684658567,0.415033361770,0.415357917592,0.415658516430,
	0.415935350855,0.416188615524,0.416418507088,0.416625224105,0.416808966948,
	0.416969937719,0.417108340164,0.417224379587,0.417318262766,0.417390197867,
	0.417440394368,0.417469062974,0.417476415540,0.417462664989,0.417428025238
	}
};

double always_inline vintagetubedriver_p2clip(double x) {
    double f = fabs(x);
    f = f * vintagetubedriver_p2_table.istep;
    int i = static_cast<int>(f);
    if (i < 0) {
        f = vintagetubedriver_p2_table.data[0];
    } else if (i >= vintagetubedriver_p2_table.size-1) {
        f = vintagetubedriver_p2_table.data[vintagetubedriver_p2_table.size-1];
    } else {
    f -= i;
    f = vintagetubedriver_p2_table.data[i]*(1-f) + vintagetubedriver_p2_table.data[i+1]*f;
    }
    return copysign(f, x);
}

